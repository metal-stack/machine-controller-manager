// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// V1NetworkAcquireRequest v1 network acquire request
// swagger:model v1.NetworkAcquireRequest
type V1NetworkAcquireRequest struct {

	// a description for this entity
	Description string `json:"description,omitempty"`

	// free labels that you associate with this network.
	// Required: true
	Labels map[string]string `json:"labels"`

	// a readable name for this entity
	Name string `json:"name,omitempty"`

	// the partition this network belongs to
	Partitionid string `json:"partitionid,omitempty"`

	// the project id this network belongs to, can be empty if globally available
	Projectid string `json:"projectid,omitempty"`
}

// Validate validates this v1 network acquire request
func (m *V1NetworkAcquireRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1NetworkAcquireRequest) validateLabels(formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *V1NetworkAcquireRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1NetworkAcquireRequest) UnmarshalBinary(b []byte) error {
	var res V1NetworkAcquireRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
